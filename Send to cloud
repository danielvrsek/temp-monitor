[
    {
        "id": "c6099cb141cc560e",
        "type": "subflow",
        "name": "authGateway",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 40,
                "wires": [
                    {
                        "id": "82116b4c9f5f3a36"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0e23f55a502915ef",
        "type": "http request",
        "z": "c6099cb141cc560e",
        "name": "authGateway",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:4000/auth/gateway/authorize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": true,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "c1ac311303bda025"
            ]
        ]
    },
    {
        "id": "b226ff8c1814552f",
        "type": "inject",
        "z": "c6099cb141cc560e",
        "name": "injectOnStart",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "82116b4c9f5f3a36"
            ]
        ]
    },
    {
        "id": "142ba9e7dec06fb7",
        "type": "debug",
        "z": "c6099cb141cc560e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 80,
        "wires": []
    },
    {
        "id": "82116b4c9f5f3a36",
        "type": "change",
        "z": "c6099cb141cc560e",
        "name": "setRequestHeadersAndBody",
        "rules": [
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.secret",
                "pt": "msg",
                "to": "bc982d286906",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.workspaceId",
                "pt": "msg",
                "to": "62828f83a7d216494a413951",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 80,
        "wires": [
            [
                "a56a433d841409f0",
                "9b5386618a655387"
            ]
        ]
    },
    {
        "id": "a56a433d841409f0",
        "type": "json",
        "z": "c6099cb141cc560e",
        "name": "parseToJson",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "0e23f55a502915ef"
            ]
        ]
    },
    {
        "id": "c1ac311303bda025",
        "type": "json",
        "z": "c6099cb141cc560e",
        "name": "parseFromJson",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 960,
        "y": 80,
        "wires": [
            [
                "142ba9e7dec06fb7",
                "b63964cced4fc426"
            ]
        ]
    },
    {
        "id": "b63964cced4fc426",
        "type": "change",
        "z": "c6099cb141cc560e",
        "name": "setAuthToken",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "global",
                "to": "payload.token",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9b5386618a655387",
        "type": "debug",
        "z": "c6099cb141cc560e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 40,
        "wires": []
    },
    {
        "id": "ef6140f8cf31fa28",
        "type": "tab",
        "label": "Send to cloud",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d28137a93d159b90",
        "type": "catch",
        "z": "ef6140f8cf31fa28",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 80,
        "y": 480,
        "wires": [
            [
                "b2fe9bcea0387b04",
                "0ed1d5c6fefe555b"
            ]
        ]
    },
    {
        "id": "b2fe9bcea0387b04",
        "type": "debug",
        "z": "ef6140f8cf31fa28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "5064970467f89778",
        "type": "inject",
        "z": "ef6140f8cf31fa28",
        "name": "loadFromCollection",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "projection",
                "v": "{\"temperature\":1,\"humidity\":1,\"timestamp\":1,\"_id\":0}",
                "vt": "json"
            }
        ],
        "repeat": "301",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sent\":false}",
        "payloadType": "json",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "3077bedb7ea861e0"
            ]
        ]
    },
    {
        "id": "3077bedb7ea861e0",
        "type": "mongodb in",
        "z": "ef6140f8cf31fa28",
        "mongodb": "ecb43e63847ff54b",
        "name": "",
        "collection": "WeatherData",
        "operation": "find",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "e76f173739eab29b"
            ]
        ]
    },
    {
        "id": "62921504dcca70a7",
        "type": "debug",
        "z": "ef6140f8cf31fa28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 60,
        "wires": []
    },
    {
        "id": "a1afeb34c8fad9f2",
        "type": "json",
        "z": "ef6140f8cf31fa28",
        "name": "parseToJson",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 120,
        "wires": [
            [
                "8956317983e3d7d5"
            ]
        ]
    },
    {
        "id": "bdea5adf607bd20d",
        "type": "debug",
        "z": "ef6140f8cf31fa28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 60,
        "wires": []
    },
    {
        "id": "8956317983e3d7d5",
        "type": "http request",
        "z": "ef6140f8cf31fa28",
        "name": "postDataToCloud",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:4000/weather-data",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "2fb8eba0176a6a31",
                "bdea5adf607bd20d"
            ]
        ]
    },
    {
        "id": "0b67c818509c1aa6",
        "type": "function",
        "z": "ef6140f8cf31fa28",
        "name": "sentTrue",
        "func": "\nmsg.query = {\"sent\": false};\nmsg.payload = {\"$set\": {\"sent\": true}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 360,
        "wires": [
            [
                "a83c83258bbad90d"
            ]
        ]
    },
    {
        "id": "2fb8eba0176a6a31",
        "type": "switch",
        "z": "ef6140f8cf31fa28",
        "name": "validateStatusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "401",
                "vt": "num"
            },
            {
                "t": "btwn",
                "v": "200",
                "vt": "num",
                "v2": "299",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "40c682d24e7caa93"
            ],
            [
                "0b67c818509c1aa6"
            ]
        ]
    },
    {
        "id": "a83c83258bbad90d",
        "type": "mongodb out",
        "z": "ef6140f8cf31fa28",
        "mongodb": "ecb43e63847ff54b",
        "name": "",
        "collection": "WeatherData",
        "payonly": false,
        "upsert": false,
        "multi": true,
        "operation": "update",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "a80c07ef6e112c3c",
        "type": "file",
        "z": "ef6140f8cf31fa28",
        "name": "sendToCloudErrorLog.txt",
        "filename": "C:\\Users\\Vita\\Unicorn\\weatherstation\\SendToCloudErrorLog.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 490,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e76f173739eab29b",
        "type": "function",
        "z": "ef6140f8cf31fa28",
        "name": "setRequestHeadersAndBody",
        "func": "const token = global.get(\"token\")\nmsg.headers = {\n    Authorization: \"Bearer \"+ token,\n    [\"content-type\"]: \"application/json\"\n}\nmsg.payload = {\n    data: msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 120,
        "wires": [
            [
                "62921504dcca70a7",
                "a1afeb34c8fad9f2"
            ]
        ]
    },
    {
        "id": "40c682d24e7caa93",
        "type": "subflow:c6099cb141cc560e",
        "z": "ef6140f8cf31fa28",
        "name": "",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "0ed1d5c6fefe555b",
        "type": "change",
        "z": "ef6140f8cf31fa28",
        "name": "setErrorLog",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 560,
        "wires": [
            [
                "a80c07ef6e112c3c"
            ]
        ]
    },
    {
        "id": "ecb43e63847ff54b",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "meteodata",
        "name": ""
    }
]
